<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Posts on Will Duke's Blog</title><link>https://willduke.github.io/posts/</link><description>Recent content in Posts on Will Duke's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 12 Aug 2023 22:22:45 -0400</lastBuildDate><atom:link href="https://willduke.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>A Poorman's Rust Enum in Python for ThePrimeagen's Lexer</title><link>https://willduke.github.io/posts/06-lexer/</link><pubDate>Sat, 12 Aug 2023 22:22:45 -0400</pubDate><guid>https://willduke.github.io/posts/06-lexer/</guid><description>A couple of months ago, I came across a video where the prolific streamer and Netflix dev known online as the ThePrimeagen live-coded a simple lexer for an interpreter inspired by the book Crafting Interpreters by Robert Nystrom. If you&amp;rsquo;ve ever looked into what CPython actually does with your source code, you&amp;rsquo;ll know that it parses the code into an abstract syntax tree, converts the tree into bytecode instructions (i.e. those *.</description></item><item><title>Pretty Pipes for Perusable (and Reusable) Pandas Procedures</title><link>https://willduke.github.io/posts/05-pretty-pipes/</link><pubDate>Thu, 22 Sep 2022 16:29:13 -0400</pubDate><guid>https://willduke.github.io/posts/05-pretty-pipes/</guid><description>Pandas is a fantastic library for data analysis, but its syntax can be a bit jarring to the unfamiliar user, especially one coming from the R tidyverse ecosystem where the %&amp;gt;% (pipe) operator makes method-chaining powerful and preferred for most operations. It turns out that a similar syntax is totally possible in pandas with the pipe and assign methods! With these, you can make your pandas code much more readable and reusable.</description></item><item><title>Solving Matt Parker's Wordle Puzzle in Seconds with iGraph</title><link>https://willduke.github.io/posts/04-word-cliques/</link><pubDate>Sat, 03 Sep 2022 13:42:33 -0400</pubDate><guid>https://willduke.github.io/posts/04-word-cliques/</guid><description>A few weeks ago, Matt Parker released a video where he posed a question he&amp;rsquo;d received from a viewer about the popular game Wordle: how many words can you try in a Wordle game without reusing a letter? At most, the answer can be 5 (25 letters total with one unused). So the question becomes: are there sets of five English words without any overlapping letters, and (while we&amp;rsquo;re at it) if so, how many?</description></item><item><title>The Trouble with Notebooks</title><link>https://willduke.github.io/posts/03-notebooks/</link><pubDate>Thu, 28 Jul 2022 00:00:00 +0000</pubDate><guid>https://willduke.github.io/posts/03-notebooks/</guid><description>Notebooks are exceptionally popular among data scientists. So much so that many of my colleagues work largely in JupyterHub or Sagemaker. Notebooks provide a convenient enviroment for quick prototyping, and they feel natural for data scientists that (like me) don&amp;rsquo;t have a formal computer science background. That said, I&amp;rsquo;m convinced that we are using them in many cases where they aren&amp;rsquo;t worth the downsides, and even that the popular wisdom that they are a good place to get started quickly has it quite backwards.</description></item><item><title>Conway's Game of Life in Just a Few Lines with Python's Scientific Stack</title><link>https://willduke.github.io/posts/02-conway-with-numpy/</link><pubDate>Tue, 03 May 2022 21:35:20 -0400</pubDate><guid>https://willduke.github.io/posts/02-conway-with-numpy/</guid><description>Awhile back, I came across a video from one of my favorite channels, Numberphile, on Conway&amp;rsquo;s Game of Life. Turns out, it&amp;rsquo;s not a game you can actually &amp;ldquo;play,&amp;rdquo; beyond setting the initial state of a simulation that progresses via a set of very simple rules. Devised by the British mathematician John Conway in 1970, the game is composed of a grid of cells, each of which can be alive or dead.</description></item><item><title>My First Post</title><link>https://willduke.github.io/posts/01-my-first-post/</link><pubDate>Sat, 30 Apr 2022 09:21:05 -0400</pubDate><guid>https://willduke.github.io/posts/01-my-first-post/</guid><description>This is my first blog post using Hugo and the Hyde theme. Looks nice!</description></item></channel></rss>